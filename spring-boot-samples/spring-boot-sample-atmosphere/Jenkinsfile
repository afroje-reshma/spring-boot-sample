
node {
    
    stage 'checkout'
    checkout scm
    def project_path = "spring-boot-samples/spring-boot-sample-atmosphere"

     stage 'sonar-scan'
    
     withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: '2086befd-7e8c-4149-ae4e-e53b4803bd8b',
                usernameVariable: 'username', passwordVariable: 'password']]) {
      sh "echo   SONARQUBE: username is $username, password is $password"  
    def scannerHome = tool 'sonar-scanner'
    sh "${scannerHome}/bin/sonar-scanner -Dsonar.host.url=http://localhost:9000 -Dsonar.username=$username -Dsonar.password=$password -Dsonar.projectKey=roshni -Dsonar.projectName=jenkinsfile-pipeline  -Dsonar.projectVersion=2.0 -Dsonar.sources=."
   
   
     dir(project_path){
     withEnv(["PATH+MAVEN=${tool 'M3'}/bin"]){
     stage 'compiling, packaging'
     sh 'mvn clean compile'   
     sh 'mvn clean package'
       
     
     stage 'test-archival/HTML-verify'
     publishHTML(target: [allowMissing: true,
     alwaysLinkToLastBuild: false, 
     keepAll: true, 
     reportDir: 'target/site/jacoco',
     reportFiles: 'index.html', reportName: 'HTML Report'])
     
     step([$class: 'JUnitResultArchiver',
     testResults: 'target/surefire-reports/TEST-*.xml'])

     stage 'nexus-upload'
     
     /*withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'b9bc9cc5-871e-4738-88f3-9c3e5525a096',
                    usernameVariable: 'Username', passwordVariable: 'Password']]) {
      sh "curl -XDELETE  -u $Username:$Password http://35.160.229.253:8081/nexus/content/repositories/releases/org/venice/piazza/piazza-ingest/1.0"
     */
     step([$class: 'NexusArtifactUploader',
     artifactId: 'piazza-ingest', classifier: 'artifact',
     credentialsId: 'b9bc9cc5-871e-4738-88f3-9c3e5525a096',
     file: '/var/lib/jenkins/workspace/jenkinsfiletest1/spring-boot-samples/spring-boot-sample-atmosphere/target/piazza-ingest-1.0.0.jar',
     groupId: 'org.venice.piazza',
     nexusUrl: '35.160.229.253:8081/nexus', 
     nexusVersion: 'NEXUS2', protocol: 'http',
     repository: 'releases', type: 'jar', version: "${env.BUILD_ID}",]) 
     
     
      stage 'cf-deploy'

      withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: '28fba85b-6f88-4e05-98bc-53a792ac3d07',
                usernameVariable: 'Pusername', passwordVariable: 'Ppassword']]) {
      sh "echo   PCF: username is $Pusername, password is $Ppassword"    
      sh "cf login -a https://api.devops.geointservices.io --skip-ssl-validation = true, -u $Pusername -p $Ppassword -o Piazza -s test"
      sh 'cf push winter1-app -m 1024M -p /var/lib/jenkins/workspace/jenkinsfiletest1/spring-boot-samples/spring-boot-sample-atmosphere/target/piazza-ingest-1.0.0.jar -b  https://github.com/cloudfoundry/java-buildpack.git'
      sh 'cf bind-service winter1-app reshservice ; cf restage winter1-app'
       
   
      
      }
     }
   }
  }
} 
   
